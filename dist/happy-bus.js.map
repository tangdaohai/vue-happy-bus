{"version":3,"file":"happy-bus.js","sources":["../index.js"],"sourcesContent":["import Vue$ from 'vue'\nimport { version } from './package.json'\nlet Vue = Vue$\nif (typeof window !== 'undefined' && window.Vue) {\n  Vue = window.Vue\n}\n\n// 记录所有的事件类型与事件函数\nconst EventStore = {}\nconst Bus = new Vue()\n\n// 移除所有事件的方法\nconst destroyHandler = function () {\n  // this 为调用此方法的vue组件\n  const currentEventObj = EventStore[this._uid]\n  if (typeof currentEventObj === 'undefined') {\n    return\n  }\n  for (let type in currentEventObj) {\n    const key = Array.isArray(type) ? type.join(',') : type\n    // Bus 解绑事件\n    Bus.$off(type, currentEventObj[key])\n  }\n  // 删除记录的事件集合\n  delete EventStore[this._uid]\n}\n\nconst BusFactory = vm => {\n  // 当前调用组件的 destroyed 钩子\n  const destroyed = vm.$options.destroyed || []\n  // 当前组件的唯一标示(vue生成的自增ID)\n  const uid = vm._uid\n  // 初始化当前组件的事件集合对象\n  EventStore[uid] = {}\n  // 为当前组件挂载destroyed钩子\n  !destroyed.includes(destroyHandler) && vm.$once('hook:destroyed', destroyHandler)\n\n  return {\n    $on: (type, handler) => {\n      const key = Array.isArray(type) ? type.join(',') : type\n      EventStore[uid][key] = handler\n      Bus.$on(type, handler)\n    },\n    $off: (type, handler) => {\n      // $off() 时 type 为空，移除所有事件\n      if (!type) {\n        // 删除该uid下事件集合\n        delete EventStore[uid]\n        Bus.$off()\n        return\n      }\n      const key = Array.isArray(type) ? type.join(',') : type\n      // 删除对应的事件\n      delete EventStore[uid][key]\n      Bus.$off(type, handler)\n    },\n    $once: (...params) => Bus.$once(...params),\n    $emit: (...params) => Bus.$emit(...params)\n  }\n}\n\nBusFactory.$emit = (...params) => Bus.$emit(...params)\nBusFactory.$once = (...params) => Bus.$once(...params)\n\nexport default BusFactory\nexport { Bus, version }\n"],"names":["Vue","Vue$","window","EventStore","Bus","destroyHandler","currentEventObj","_uid","type","key","Array","isArray","join","$off","BusFactory","destroyed","vm","$options","uid","includes","$once","handler","$on","$emit"],"mappings":";;;;;;;;;;;;;;;;AAEA,IAAIA,MAAMC,IAAV;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,OAAOF,GAA5C,EAAiD;QACzCE,OAAOF,GAAb;;;;AAIF,IAAMG,aAAa,EAAnB;AACA,IAAMC,MAAM,IAAIJ,GAAJ,EAAZ;;;AAGA,IAAMK,iBAAiB,SAAjBA,cAAiB,GAAY;;MAE3BC,kBAAkBH,WAAW,KAAKI,IAAhB,CAAxB;MACI,OAAOD,eAAP,KAA2B,WAA/B,EAA4C;;;OAGvC,IAAIE,IAAT,IAAiBF,eAAjB,EAAkC;QAC1BG,MAAMC,MAAMC,OAAN,CAAcH,IAAd,IAAsBA,KAAKI,IAAL,CAAU,GAAV,CAAtB,GAAuCJ,IAAnD;;QAEIK,IAAJ,CAASL,IAAT,EAAeF,gBAAgBG,GAAhB,CAAf;;;SAGKN,WAAW,KAAKI,IAAhB,CAAP;CAZF;;AAeA,IAAMO,aAAa,SAAbA,UAAa,KAAM;;MAEjBC,YAAYC,GAAGC,QAAH,CAAYF,SAAZ,IAAyB,EAA3C;;MAEMG,MAAMF,GAAGT,IAAf;;aAEWW,GAAX,IAAkB,EAAlB;;GAECH,UAAUI,QAAV,CAAmBd,cAAnB,CAAD,IAAuCW,GAAGI,KAAH,CAAS,gBAAT,EAA2Bf,cAA3B,CAAvC;;SAEO;SACA,aAACG,IAAD,EAAOa,OAAP,EAAmB;UAChBZ,MAAMC,MAAMC,OAAN,CAAcH,IAAd,IAAsBA,KAAKI,IAAL,CAAU,GAAV,CAAtB,GAAuCJ,IAAnD;iBACWU,GAAX,EAAgBT,GAAhB,IAAuBY,OAAvB;UACIC,GAAJ,CAAQd,IAAR,EAAca,OAAd;KAJG;UAMC,cAACb,IAAD,EAAOa,OAAP,EAAmB;;UAEnB,CAACb,IAAL,EAAW;;eAEFL,WAAWe,GAAX,CAAP;YACIL,IAAJ;;;UAGIJ,MAAMC,MAAMC,OAAN,CAAcH,IAAd,IAAsBA,KAAKI,IAAL,CAAU,GAAV,CAAtB,GAAuCJ,IAAnD;;aAEOL,WAAWe,GAAX,EAAgBT,GAAhB,CAAP;UACII,IAAJ,CAASL,IAAT,EAAea,OAAf;KAjBG;WAmBE;aAAejB,IAAIgB,KAAJ,sBAAf;KAnBF;WAoBE;aAAehB,IAAImB,KAAJ,sBAAf;;GApBT;CAVF;;AAkCAT,WAAWS,KAAX,GAAmB;SAAenB,IAAImB,KAAJ,sBAAf;CAAnB;AACAT,WAAWM,KAAX,GAAmB;SAAehB,IAAIgB,KAAJ,sBAAf;CAAnB;;;;;;;;;;;;;;"}